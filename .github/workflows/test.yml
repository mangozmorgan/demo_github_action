
name: MyWorkflow

on:
  push:
    branches: ["main"]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  BUILD_PATH: "."

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Detect package manager
        id: detect-package-manager
        run: "|\n                if [ -f \"${{ github.workspace }}/yarn.lock\" ];
          then\n                    echo \"manager=yarn\" >> $GITHUB_OUTPUT\n    \
          \                echo \"command=install\" >> $GITHUB_OUTPUT\n          \
          \          echo \"runner=yarn\" >> $GITHUB_OUTPUT\n                    echo
          \"lockfile=yarn.lock\" >> $GITHUB_OUTPUT\n                    exit 0\n \
          \               elif [ -f \"${{ github.workspace }}/package.json\" ]; then\n\
          \                    echo \"manager=npm\" >> $GITHUB_OUTPUT\n          \
          \          echo \"command=ci\" >> $GITHUB_OUTPUT\n                    echo
          \"runner=npx --no-install\" >> $GITHUB_OUTPUT\n                    echo
          \"lockfile=package-lock.json\" >> $GITHUB_OUTPUT\n                    exit
          0\n                else\n                    echo \"Unable to determine
          package manager\"\n                    exit 1\n                fi\n    \
          \        "
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: ${{ steps.detect-package-manager.outputs.manager }}
          cache-dependency-path: ${{ env.BUILD_PATH }}/${{ steps.detect-package-manager.outputs.lockfile
            }}
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command
          }}
        working-directory: ${{ env.BUILD_PATH }}
      - name: Build with Astro
        run: "${{ steps.detect-package-manager.outputs.runner }} astro build \\\n\
          \                --site \"${{ steps.pages.outputs.origin }}\" \\\n     \
          \           --base ${{ steps.pages.outputs.base_path }}"
        working-directory: ${{ env.BUILD_PATH }}
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.BUILD_PATH }}/dist
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
